// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/accounts": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Kms"
                ],
                "summary": "Get accounst list",
                "parameters": [
                    {
                        "maximum": 1000,
                        "type": "integer",
                        "example": 100,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string",
                        "name": "marker",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccountListRes"
                        }
                    }
                }
            }
        },
        "/api/accounts/{keyID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Kms"
                ],
                "summary": "Get account of target key id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "kms key-id",
                        "name": "keyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccountRes"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Kms"
                ],
                "summary": "delete account of target key id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "kms key-id",
                        "name": "keyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccountDeletionRes"
                        }
                    }
                }
            }
        },
        "/api/create/account": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Kms"
                ],
                "summary": "Create new account",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.AccountRes"
                        }
                    }
                }
            }
        },
        "/api/error": {
            "get": {
                "tags": [
                    "Health"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/health": {
            "get": {
                "tags": [
                    "Health"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/import/account": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Kms"
                ],
                "summary": "Import account to kms",
                "parameters": [
                    {
                        "description": "subject",
                        "name": "subject",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PkReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.AccountRes"
                        }
                    }
                }
            }
        },
        "/api/sign/txn": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Sign serialized transaction.",
                "parameters": [
                    {
                        "description": "subject",
                        "name": "subject",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TxnReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.SingedTxnRes"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AccountDeletionRes": {
            "type": "object",
            "properties": {
                "deletionDate": {
                    "type": "string",
                    "example": "2023-12-11 03:21:18 +0000 UTC"
                },
                "keyID": {
                    "type": "string",
                    "example": "f50a9229-e7c7-45ba-b06c-8036b894424e"
                }
            }
        },
        "dto.AccountListRes": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AccountRes"
                    }
                },
                "marker": {
                    "type": "string",
                    "example": "AE0AAAACAHMAAAAJYWNjb3VudElkAHMAAAAMOTg1MDk2Mzk3ODIxAHMAAAAEdGtJZABzAAAAJDQ0YTAzNWU2LTY1OTEtNDgwMC04YjcwLWM3MzNiNTI2MzljMw"
                }
            }
        },
        "dto.AccountRes": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "0x216690cD286d8a9c8D39d9714263bB6AB97046F3"
                },
                "keyID": {
                    "type": "string",
                    "example": "f50a9229-e7c7-45ba-b06c-8036b894424e"
                }
            }
        },
        "dto.PkReq": {
            "type": "object",
            "required": [
                "pk"
            ],
            "properties": {
                "pk": {
                    "type": "string",
                    "example": "637081577126ff5c2d327f992bd66548e00262578fd558d7fe272ef21b8bf825"
                }
            }
        },
        "dto.SingedTxnRes": {
            "type": "object",
            "properties": {
                "signedTxn": {
                    "type": "string",
                    "example": "0xf86a5685ba43b740008252089439e243a7f209932df41e1fc0a1ada51b3a04b46d0180860b280f5b1d3aa00d2ea43cfd9b91151348d037a5a80293f543e1700a7019853f28063f6442c826a052a29797169740b1bc48962e197299061c8aa3314951a9c71418d19036604645"
                }
            }
        },
        "dto.TxnReq": {
            "type": "object",
            "required": [
                "keyID",
                "serializedTxn"
            ],
            "properties": {
                "keyID": {
                    "type": "string",
                    "example": "f50a9229-e7c7-45ba-b06c-8036b894424e"
                },
                "serializedTxn": {
                    "type": "string",
                    "example": "0xea5685ba43b740008252089439e243a7f209932df41e1fc0a1ada51b3a04b46d018086059407ad8e8b8080"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
